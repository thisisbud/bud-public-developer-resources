{
	"info": {
		"_postman_id": "ab513e5e-b14d-4184-ae3f-6b0ec9af2fea",
		"name": "Bud - API Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authenticate",
			"item": [
				{
					"name": "Obtain a new OAuth access token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Response has access_token\"] = jsonData.data.access_token;",
									"tests[\"Response has token_type\"] = jsonData.data.token_type;",
									"",
									"pm.environment.set(\"auth_token\", jsonData.data.access_token);",
									"pm.environment.set(\"refresh_token\", jsonData.data.refresh_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{api_credentials_id}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{api_credentials_secret}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{proxy_url}}v1/oauth/token",
							"host": [
								"{{proxy_url}}v1"
							],
							"path": [
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh OAuth2 token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Response has access_token\"] = jsonData.data.access_token;",
									"tests[\"Response has token_type\"] = jsonData.data.token_type;",
									"",
									"pm.environment.set(\"auth_token\", jsonData.data.access_token);",
									"pm.environment.set(\"refresh_token\", jsonData.data.refresh_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "X-Client-Id",
								"value": "{{api_credentials_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "refresh_token",
									"type": "text"
								},
								{
									"key": "refresh_token",
									"value": "{{refresh_token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{proxy_url}}v1/oauth/token",
							"host": [
								"{{proxy_url}}v1"
							],
							"path": [
								"oauth",
								"token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Customers API",
			"item": [
				{
					"name": "Manage Customers",
					"item": [
						{
							"name": "Create Customer V3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"customer_id\", jsonData.data.customer_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"customer_context\": {\n\t\t\"type\": \"personal\",\n\t\t\"region\": \"GB\"\n\t}\n}"
								},
								"url": {
									"raw": "{{proxy_url}}platform/v3/customers",
									"host": [
										"{{proxy_url}}platform"
									],
									"path": [
										"v3",
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Customer V3 (Batch)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"number_of_customers\": 2\n}"
								},
								"url": {
									"raw": "{{proxy_url}}platform/v3/customers/batch",
									"host": [
										"{{proxy_url}}platform"
									],
									"path": [
										"v3",
										"customers",
										"batch"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Customer",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{proxy_url}}/v1/customers/{{customer_id}}",
									"host": [
										"{{proxy_url}}"
									],
									"path": [
										"v1",
										"customers",
										"{{customer_id}}"
									]
								},
								"description": "This endpoint is used to delete an existing Customer."
							},
							"response": []
						},
						{
							"name": "Remove Customer V3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Response has customer_delete_v3_task_id\"] = jsonData.data.task_id;",
											"",
											"pm.environment.set(\"customer_delete_v3_task_id\", jsonData.data.task_id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{proxy_url}}/platform/v3/customers/{{customer_id}}",
									"host": [
										"{{proxy_url}}"
									],
									"path": [
										"platform",
										"v3",
										"customers",
										"{{customer_id}}"
									]
								},
								"description": "This endpoint is used to delete an existing Customer."
							},
							"response": []
						},
						{
							"name": "Retrieve Customers V3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"packages": {},
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{proxy_url}}/platform/v3/customers",
									"host": [
										"{{proxy_url}}"
									],
									"path": [
										"platform",
										"v3",
										"customers"
									],
									"query": [
										{
											"key": "date_from",
											"value": "2022-01-01T01:00:00Z",
											"description": "Only include customers created at or after this time",
											"disabled": true
										},
										{
											"key": "date_to",
											"value": "2024-01-01T01:00:00Z",
											"description": "Only include customers created at or before this time",
											"disabled": true
										},
										{
											"key": "idempotent_identifier",
											"value": "user-assigned-id",
											"description": "Only include customers with this idempotent identifier",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": "200",
											"description": "Number of results to return with a single request",
											"disabled": true
										},
										{
											"key": "page_token",
											"value": null,
											"description": "Token to retrieve next page by",
											"disabled": true
										}
									]
								},
								"description": "This endpoint is used to retrieve a list of customers associated with the project."
							},
							"response": []
						},
						{
							"name": "Retrieve Remove Customer V3 Status",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{proxy_url}}platform/v3/customers/{{customer_id}}/{{customer_delete_v3_task_id}}",
									"host": [
										"{{proxy_url}}platform"
									],
									"path": [
										"v3",
										"customers",
										"{{customer_id}}",
										"{{customer_delete_v3_task_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve customer context",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}v1/customers/{{customer_id}}/context",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"customers",
										"{{customer_id}}",
										"context"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update customer context",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"region\": \"US\",\n  \"locale\": \"en-US\"\n}"
								},
								"url": {
									"raw": "{{proxy_url}}v1/customers/{{customer_id}}/context",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"customers",
										"{{customer_id}}",
										"context"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Connect API",
			"item": [
				{
					"name": "Create a Connection",
					"item": [
						{
							"name": "Retrieve OB Providers",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{proxy_url}}v1/open-banking/providers",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"open-banking",
										"providers"
									],
									"query": [
										{
											"key": "type",
											"value": "sandbox",
											"disabled": true
										},
										{
											"key": "region",
											"value": "GBR",
											"disabled": true
										},
										{
											"key": "scopes",
											"value": "parties",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Auth Gateway URL V2",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									},
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "default"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"redirect_url\": \"https://my-agent-webapp.com/connected?my-parameter=xyz\"\n}"
								},
								"url": {
									"raw": "{{proxy_url}}v2/open-banking/authorisation-gateway-url",
									"host": [
										"{{proxy_url}}v2"
									],
									"path": [
										"open-banking",
										"authorisation-gateway-url"
									]
								}
							},
							"response": [
								{
									"name": "Retrieve Auth Gateway URL V2",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "default"
											},
											{
												"key": "X-Client-Id",
												"value": "{{api_credentials_id}}",
												"type": "default"
											},
											{
												"key": "X-Customer-Id",
												"value": "{{customer_id}}",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"redirect_url\": \"https://my-agent-webapp.com/connected?my-parameter=xyz\"\n}"
										},
										"url": {
											"raw": "{{proxy_url}}v2/open-banking/authorisation-gateway-url",
											"host": [
												"{{proxy_url}}v2"
											],
											"path": [
												"open-banking",
												"authorisation-gateway-url"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 30 Mar 2023 11:33:05 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "403"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "x-envoy-upstream-service-time",
											"value": "176"
										},
										{
											"key": "x-upstream-request-id",
											"value": "c608ea95-49f0-458f-8d02-17a49684372a"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=2592000; includeSubDomains"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "CF-RAY",
											"value": "7b0009268fed889d-LHR"
										}
									],
									"cookie": [],
									"body": "{\n    \"operation_id\": \"v2_ob_authorisation_gateway_url_post\",\n    \"data\": {\n        \"url\": \"https://connect-sandbox.thisisbud.com/connect?nonce=3NfQEp5jJR&token=rk0RJDCxo5tQ4jWVDHMUSZcagrUPw707eBPeq0L6GiYm3aRciQzUuolhKn7kNPiw17dLvCdJvnYYV2tPCoBDRClFtvlUOGe9FeDqywOFuuhA2JDO4bTMna7lRy8oI6qzzz17uHKQEkQlnf4syeMqITUIQQNsDWAr6yoeXI0Ygxp4xDbGVnQdhvmjzfxdou9XtJrHOvNRoVr0IBcthSzMgsp0MVdvMYZNYaLGLUMkl08gp29ziHk2OoDx6ZjwzdJ\"\n    }\n}"
								},
								{
									"name": "Retrieve Auth Gateway URL V2 - Filter by provider type",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "default"
											},
											{
												"key": "X-Client-Id",
												"value": "{{api_credentials_id}}",
												"type": "default"
											},
											{
												"key": "X-Customer-Id",
												"value": "{{customer_id}}",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"redirect_url\": \"https://my-agent-webapp.com/connected?my-parameter=xyz\",\n  \"provider_types\": [\n    \"business\"\t\n  ]\n}"
										},
										"url": {
											"raw": "{{proxy_url}}v2/open-banking/authorisation-gateway-url",
											"host": [
												"{{proxy_url}}v2"
											],
											"path": [
												"open-banking",
												"authorisation-gateway-url"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 30 Mar 2023 11:37:28 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "403"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "x-envoy-upstream-service-time",
											"value": "176"
										},
										{
											"key": "x-upstream-request-id",
											"value": "b141e39f-b42d-4e06-b1eb-e84b4476d385"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=2592000; includeSubDomains"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "CF-RAY",
											"value": "7b000f906a52889d-LHR"
										}
									],
									"cookie": [],
									"body": "{\n    \"operation_id\": \"v2_ob_authorisation_gateway_url_post\",\n    \"data\": {\n        \"url\": \"https://connect-sandbox.thisisbud.com/connect?nonce=wvpzUFr917&token=rseQrF6zONHuK6z25cVnyn1x1DQlc5MM9iddQmtzq1Zv3A5UNSBE2qav2AS4BI22KupogxFAosYDcbQ8Z67lU0VeGwYE3e22QZmlSa3DCxmjF0muBMfDUc0kRXTWEUmCOGSeEkYpS7wovIOPgbCnpicCQSG4u4vNxWKuSKuvxRfXPq857a3H29mahDsChwa0PhJDTsADKkn541P1rpr3BtpJvc5Uvk00R5s1xwhf6LEjUrSaFdXhSYuRIuIv0k9\"\n    }\n}"
								},
								{
									"name": "Retrieve Auth Gateway URL V2 - Filter by providers",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "default"
											},
											{
												"key": "X-Client-Id",
												"value": "{{api_credentials_id}}",
												"type": "default"
											},
											{
												"key": "X-Customer-Id",
												"value": "{{customer_id}}",
												"type": "default"
											},
											{
												"key": "X-Customer-Secret",
												"value": "{{customer_secret}}",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"redirect_url\": \"https://my-agent-webapp.com/connected?my-parameter=xyz\",\n  \"providers\": [\n  \t\"Natwest_Sandbox\"\n  ]\n}"
										},
										"url": {
											"raw": "{{proxy_url}}v2/open-banking/authorisation-gateway-url",
											"host": [
												"{{proxy_url}}v2"
											],
											"path": [
												"open-banking",
												"authorisation-gateway-url"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 30 Mar 2023 11:33:05 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "403"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "x-envoy-upstream-service-time",
											"value": "176"
										},
										{
											"key": "x-upstream-request-id",
											"value": "c608ea95-49f0-458f-8d02-17a49684372a"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=2592000; includeSubDomains"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "CF-RAY",
											"value": "7b0009268fed889d-LHR"
										}
									],
									"cookie": [],
									"body": "{\n    \"operation_id\": \"v2_ob_authorisation_gateway_url_post\",\n    \"data\": {\n        \"url\": \"https://connect-sandbox.thisisbud.com/connect?nonce=3NfQEp5jJR&token=rk0RJDCxo5tQ4jWVDHMUSZcagrUPw707eBPeq0L6GiYm3aRciQzUuolhKn7kNPiw17dLvCdJvnYYV2tPCoBDRClFtvlUOGe9FeDqywOFuuhA2JDO4bTMna7lRy8oI6qzzz17uHKQEkQlnf4syeMqITUIQQNsDWAr6yoeXI0Ygxp4xDbGVnQdhvmjzfxdou9XtJrHOvNRoVr0IBcthSzMgsp0MVdvMYZNYaLGLUMkl08gp29ziHk2OoDx6ZjwzdJ\"\n    }\n}"
								}
							]
						},
						{
							"name": "Initiate Provider Authorisation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Response has connection_task_id\"] = jsonData.data.task_id;",
											"",
											"pm.environment.set(\"connection_task_id\", jsonData.data.task_id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "default"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"provider\": \"{{bank_name}}\",\n  \"redirect_url\": \"https://my-agent-webapp.com/connected?my-parameter=xyz\"\n}"
								},
								"url": {
									"raw": "{{proxy_url}}v1/open-banking/authorisation-url",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"open-banking",
										"authorisation-url"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve auth URL",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "default"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{proxy_url}}v1/open-banking/authorisation-url/{{connection_task_id}}",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"open-banking",
										"authorisation-url",
										"{{connection_task_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Submit auth codes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Response has connection_task_id\"] = jsonData.data.task_id;",
											"",
											"pm.environment.set(\"connection_task_id\", jsonData.data.task_id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "default"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"state\": \"{{connection_task_id}}\",\n  \"my-parameter\":\"xyz\",\n  \"code\": \"....\"\n}"
								},
								"url": {
									"raw": "{{proxy_url}}v1/open-banking/authorisation-codes",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"open-banking",
										"authorisation-codes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Submit Auth Codes V2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Response has connection_task_id\"] = jsonData.data.task_id;",
											"",
											"pm.environment.set(\"connection_task_id\", jsonData.data.task_id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "default"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"state\": \"{{connection_task_id}}\",\n  \"code\": \"....\"\n}"
								},
								"url": {
									"raw": "{{proxy_url}}v2/open-banking/authorisation-codes",
									"host": [
										"{{proxy_url}}v2"
									],
									"path": [
										"open-banking",
										"authorisation-codes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve connection status",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "default"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{proxy_url}}v1/open-banking/connect/{{connection_task_id}}",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"open-banking",
										"connect",
										"{{connection_task_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Manage a Connection",
					"item": [
						{
							"name": "Initiate Refresh (deprecated)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Response has refresh_task_id\"] = jsonData.data.task_id;",
											"",
											"pm.environment.set(\"refresh_task_id\", jsonData.data.task_id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									},
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "default"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "default"
									},
									{
										"key": "X-Customer-Ip-Address",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"provider\": \"{{bank_name}}\"\n}"
								},
								"url": {
									"raw": "{{proxy_url}}v1/open-banking/refresh",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"open-banking",
										"refresh"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve refresh status (deprecated)",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{proxy_url}}v1/open-banking/refresh/{{refresh_task_id}}",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"open-banking",
										"refresh",
										"{{refresh_task_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Initiate Refresh V2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Response has refresh_task_id\"] = jsonData.data.task_id;",
											"",
											"pm.environment.set(\"refresh_task_id\", jsonData.data.task_id);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									},
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "default"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "default"
									},
									{
										"key": "X-Customer-Ip-Address",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}"
								},
								"url": {
									"raw": "{{proxy_url}}open-banking/v2/refresh",
									"host": [
										"{{proxy_url}}open-banking"
									],
									"path": [
										"v2",
										"refresh"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve refresh V2 status",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{proxy_url}}open-banking/v2/refresh/{{refresh_task_id}}",
									"host": [
										"{{proxy_url}}open-banking"
									],
									"path": [
										"v2",
										"refresh",
										"{{refresh_task_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Customer Consents",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Response has data\"] = jsonData.data;",
											"var firstElement = jsonData.data[0]",
											"",
											"pm.environment.set(\"consent_id\", firstElement.id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{proxy_url}}v1/open-banking/account-access-consents?status=all",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"open-banking",
										"account-access-consents"
									],
									"query": [
										{
											"key": "status",
											"value": "all"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Initiate Revoke Consent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Response has revoke_task_id\"] = jsonData.data.task_id;",
											"",
											"pm.environment.set(\"revoke_task_id\", jsonData.data.task_id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									},
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "default"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"provider\": \"{{bank_name}}\"\n}"
								},
								"url": {
									"raw": "{{proxy_url}}v1/open-banking/account-access-consent/revoke",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"open-banking",
										"account-access-consent",
										"revoke"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Revoke consent status",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{proxy_url}}v1/open-banking/account-access-consent/revoke/{{revoke_task_id}}",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"open-banking",
										"account-access-consent",
										"revoke",
										"{{revoke_task_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Reconfirm consent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									},
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "default"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"provider\": \"{{bank_name}}\"\n}"
								},
								"url": {
									"raw": "{{proxy_url}}v1/open-banking/account-access-consents/{{consent_id}}/reconfirm",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"open-banking",
										"account-access-consents",
										"{{consent_id}}",
										"reconfirm"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Ingest first party data",
					"item": [
						{
							"name": "Ingest Accounts (deprecated)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"account_ingestion_task_id\", jsonData.data.task_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/bud-accounts+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"customer_id\": \"{{customer_id}}\",\n    \"accounts\": [\n      {\n        \"provider\": \"Barclays\",\n        \"account_id\": \"{{account_id}}\",\n        \"currency\": \"GBP\",\n        \"account_type\": \"Personal\",\n        \"account_sub_type\": \"CurrentAccount\",\n        \"details\": [\n          {\n            \"scheme_name\": \"UK.OBIE.SortCodeAccountNumber\",\n            \"identification\": \"98765432165444\",\n            \"secondary_identification\": \"00021\",\n            \"name\": \"Mr Kevin\"\n          }\n        ],\n        \"balances\": [\n          {\n            \"amount\": {\n              \"value\": \"7400.00\",\n              \"currency\": \"GBP\"\n            },\n            \"credit_debit_indicator\": \"incoming_credit\",\n            \"credit_line\": [\n              {\n                \"included\": true,\n                \"amount\": {\n                  \"value\": \"200.00\",\n                  \"currency\": \"GBP\"\n                },\n                \"type\": \"Credit\"\n              }\n            ],\n            \"date\": \"2023-04-04\",\n            \"time\": \"00:00:00\",\n            \"type\": \"InterimBooked\"\n          }\n        ]\n      }\n    ]\n  }\n ]"
								},
								"url": {
									"raw": "{{proxy_url}}v1/ingest/accounts",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"ingest",
										"accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ingest Accounts V2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"account_ingestion_task_id\", jsonData.data.task_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/bud-accounts+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"customer_id\": \"{{customer_id}}\",\n    \"accounts\": [\n      {\n        \"provider\": \"Barclays\",\n        \"account_id\": \"{{account_id}}\",\n        \"currency\": \"GBP\",\n        \"account_type\": \"Personal\",\n        \"account_sub_type\": \"CurrentAccount\",\n        \"details\": [\n          {\n            \"scheme_name\": \"UK.OBIE.SortCodeAccountNumber\",\n            \"identification\": \"98765432165444\",\n            \"secondary_identification\": \"00021\",\n            \"name\": \"Mr Kevin\"\n          }\n        ],\n        \"balances\": [\n          {\n            \"amount\": {\n              \"value\": \"7400.00\",\n              \"currency\": \"GBP\"\n            },\n            \"credit_debit_indicator\": \"incoming_credit\",\n            \"credit_line\": [\n              {\n                \"included\": true,\n                \"amount\": {\n                  \"value\": \"200.00\",\n                  \"currency\": \"GBP\"\n                },\n                \"type\": \"Credit\"\n              }\n            ],\n            \"date\": \"2023-04-04\",\n            \"time\": \"00:00:00\",\n            \"type\": \"InterimBooked\"\n          }\n        ]\n      }\n    ]\n  }\n ]"
								},
								"url": {
									"raw": "{{proxy_url}}v2/ingest/accounts",
									"host": [
										"{{proxy_url}}v2"
									],
									"path": [
										"ingest",
										"accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Account Ingestion Task Status (deprecated)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/bud-transaction-v2+json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}v1/ingest/accounts/{{account_ingestion_task_id}}",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"ingest",
										"accounts",
										"{{account_ingestion_task_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ingest Transactions (deprecated)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"ingestion_task_id\", jsonData.data.task_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/bud-transaction-v2+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"customer_id\": \"{{customer_id}}\",\n    \"transactions\": [\n\t  {\n\t    \"provider\": \"Barclays\",\n\t    \"account_id\": \"99473c28-21cf-4a9a-b79e-fd643dd7a4bc\",\n\t    \"transaction_id\": \"dZyaKRwkKZULmmkd0wkLc0wLKo5zdbFb8NwRe\",\n\t    \"transaction_type\": \"DEB\",\n\t    \"date\": \"2021-03-01\",\n\t    \"transaction_description\": \"WEEKLY DELIVEROO\",\n\t    \"credit_debit_indicator\": \"outgoing_debit\",\n\t    \"status\": \"booked\",\n\t    \"counterparty\": {\n\t      \"name\": \"UNK\",\n\t      \"address\": \"UNK\",\n\t      \"scheme\": \"SortCodeAccountNumber\",\n\t      \"identifier\": \"UNK\"\n\t    },\n\t    \"amount\": {\n\t      \"value\": \"15.00\",\n\t      \"currency\": \"GBP\"\n\t    }\n\t  },\n\t  {\n\t    \"provider\": \"Barclays\",\n\t    \"account_id\": \"99473c28-21cf-4a9a-b79e-fd643dd7a4bc\",\n\t    \"transaction_id\": \"dZyaKRwkKZULmmkd0wkLc0wLKo5zdbFb8NwRq\",\n\t    \"transaction_type\": \"DEB\",\n\t    \"date\": \"2021-03-08\",\n\t    \"transaction_description\": \"WEEKLY DELIVEROO\",\n\t    \"credit_debit_indicator\": \"outgoing_debit\",\n\t    \"status\": \"booked\",\n\t    \"counterparty\": {\n\t      \"name\": \"UNK\",\n\t      \"address\": \"UNK\",\n\t      \"scheme\": \"SortCodeAccountNumber\",\n\t      \"identifier\": \"UNK\"\n\t    },\n\t    \"amount\": {\n\t      \"value\": \"15.00\",\n\t      \"currency\": \"GBP\"\n\t    }\n\t  },\n\t  {\n\t    \"provider\": \"Barclays\",\n\t    \"account_id\": \"99473c28-21cf-4a9a-b79e-fd643dd7a4bc\",\n\t    \"transaction_id\": \"dZyaKRwkKZULmmkd0wkLc0wLKo5zdbFb8NwRw\",\n\t    \"transaction_type\": \"DEB\",\n\t    \"date\": \"2021-03-15\",\n\t    \"transaction_description\": \"WEEKLY DELIVEROO\",\n\t    \"credit_debit_indicator\": \"outgoing_debit\",\n\t    \"status\": \"booked\",\n\t    \"counterparty\": {\n\t      \"name\": \"UNK\",\n\t      \"address\": \"UNK\",\n\t      \"scheme\": \"SortCodeAccountNumber\",\n\t      \"identifier\": \"UNK\"\n\t    },\n\t    \"amount\": {\n\t      \"value\": \"15.00\",\n\t      \"currency\": \"GBP\"\n\t    }\n\t  }\n\t]\n  }\n]"
								},
								"url": {
									"raw": "{{proxy_url}}v1/ingest/transactions",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"ingest",
										"transactions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ingest Transactions V2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"ingestion_task_id\", jsonData.metadata.task_id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/bud-transaction-v3+json",
										"type": "text"
									},
									{
										"key": "X-Disable-Synchronous",
										"value": "false",
										"type": "text"
									},
									{
										"key": "X-Generate-Transaction-IDs",
										"value": "false",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"customer_id\": \"{{customer_id}}\",\n    \"transactions\": [\n\t  {\n\t    \"provider\": \"Barclays\",\n\t    \"account_id\": \"99473c28-21cf-4a9a-b79e-fd643dd7a4bc\",\n\t    \"transaction_id\": \"dZyaKRwkKZULmmkd0wkLc0wLKo5zd123123V2\",\n\t    \"date_time\": \"2023-03-02T02:07:14Z\",\n\t    \"description\": \"Macbook Pro 16\\\" 512GB\",\n\t    \"status\": \"booked\",\n\t    \"counterparty\": {\n\t      \"name\": \"UNK\",\n\t      \"address\": \"UNK\",\n\t      \"scheme\": \"SortCodeAccountNumber\",\n\t      \"identifier\": \"UNK\"\n\t    },\n\t    \"currency\": \"GBP\",\n        \"amount\": \"-2300.00\"\n\t  },\n\t  {\n\t    \"provider\": \"Barclays\",\n\t    \"account_id\": \"99473c28-21cf-4a9a-b79e-fd643dd7a4bc\",\n\t    \"transaction_id\": \"dZyaKRwkKZULmmkd0wkLc0wLKo5zd123123V5\",\n\t    \"date_time\": \"2023-02-02T02:07:14Z\",\n\t    \"description\": \"Starbucks\",\n\t    \"status\": \"booked\",\n\t    \"currency\": \"GBP\",\n        \"amount\": \"-8.00\",\n        \"merchant_category_code\": \"1234\",\n        \"merchant_name\": \"Starbucks\"\n\t  },\n\t  {\n\t    \"provider\": \"Barclays\",\n\t    \"account_id\": \"99473c28-21cf-4a9a-b79e-fd643dd7a4bc\",\n\t    \"transaction_id\": \"dZyaKRwkKZULmmkd0wkLc0wLKo5zd123123V6\",\n\t    \"date_time\": \"2023-02-28T02:07:14Z\",\n\t    \"description\": \"CHILD BENEFIT\",\n\t    \"status\": \"booked\",\n\t    \"currency\": \"GBP\",\n        \"amount\": \"90.00\"\n\t  },\n\t  {\n\t    \"provider\": \"Barclays\",\n\t    \"account_id\": \"99473c28-21cf-4a9a-b79e-fd643dd7a4bc\",\n\t    \"transaction_id\": \"dZyaKRwkKZULmmkd0wkLc0wLKo5zd123123a1\",\n\t    \"date_time\": \"2023-02-28T02:07:14Z\",\n\t    \"description\": \"Pra Group Debt Collection\",\n\t    \"status\": \"booked\",\n\t    \"currency\": \"GBP\",\n        \"amount\": \"-800.00\"\n\t  },\n\t  {\n\t    \"provider\": \"Barclays\",\n\t    \"account_id\": \"99473c28-21cf-4a9a-b79e-fd643dd7a4bc\",\n\t    \"transaction_id\": \"dZyaKRwkKZULmmkd0wkLc0wLKo5zd123123b2\",\n\t    \"date_time\": \"2023-02-15T02:07:14Z\",\n\t    \"description\": \"m & s credit card\",\n\t    \"status\": \"booked\",\n\t    \"currency\": \"GBP\",\n        \"amount\": \"-80.00\"\n\t  }\n\t  ,\n\t  {\n\t    \"provider\": \"Barclays\",\n\t    \"account_id\": \"99473c28-21cf-4a9a-b79e-fd643dd7a4bc\",\n\t    \"transaction_id\": \"dZyaKRwkKZULmmkd0wkLc0wLKo5zd123123c1\",\n\t    \"date_time\": \"2023-01-05T02:07:14Z\",\n\t    \"description\": \"Netflix\",\n\t    \"status\": \"booked\",\n\t    \"currency\": \"GBP\",\n        \"amount\": \"-13.00\"\n\t  },\n\t  {\n\t    \"provider\": \"Barclays\",\n\t    \"account_id\": \"99473c28-21cf-4a9a-b79e-fd643dd7a4bc\",\n\t    \"transaction_id\": \"dZyaKRwkKZULmmkd0wkLc0wLKo5zd123123c2\",\n\t    \"date_time\": \"2023-02-05T02:07:14Z\",\n\t    \"description\": \"Netflix\",\n\t    \"status\": \"booked\",\n\t    \"currency\": \"GBP\",\n        \"amount\": \"-13.00\"\n\t  },\n\t  {\n\t    \"provider\": \"Barclays\",\n\t    \"account_id\": \"99473c28-21cf-4a9a-b79e-fd643dd7a4bc\",\n\t    \"transaction_id\": \"dZyaKRwkKZULmmkd0wkLc0wLKo5zd123123c3\",\n\t    \"date_time\": \"2023-03-05T02:07:14Z\",\n\t    \"description\": \"Netflix\",\n\t    \"status\": \"booked\",\n\t    \"currency\": \"GBP\",\n        \"amount\": \"-13.00\"\n\t  }\n\t  \n\t  ,\n\t  {\n\t    \"provider\": \"Barclays\",\n\t    \"account_id\": \"99473c28-21cf-4a9a-b79e-fd643dd7a4bc\",\n\t    \"transaction_id\": \"dZyaKRwkKZULmmkd0wkLc0wLKo5zd123123d1\",\n\t    \"date_time\": \"2023-01-25T02:07:14Z\",\n\t    \"description\": \"Income salary Bud\",\n\t    \"status\": \"booked\",\n\t    \"currency\": \"GBP\",\n        \"amount\": \"4500.00\"\n\t  },\n\t  {\n\t    \"provider\": \"Barclays\",\n\t    \"account_id\": \"99473c28-21cf-4a9a-b79e-fd643dd7a4bc\",\n\t    \"transaction_id\": \"dZyaKRwkKZULmmkd0wkLc0wLKo5zd123123d2\",\n\t    \"date_time\": \"2023-01-25T02:07:14Z\",\n\t    \"description\": \"Income salary Bud\",\n\t    \"status\": \"booked\",\n\t    \"currency\": \"GBP\",\n        \"amount\": \"4500.00\"\n\t  },\n\t  {\n\t    \"provider\": \"Barclays\",\n\t    \"account_id\": \"99473c28-21cf-4a9a-b79e-fd643dd7a4bc\",\n\t    \"transaction_id\": \"dZyaKRwkKZULmmkd0wkLc0wLKo5zd123123d3\",\n\t    \"date_time\": \"2023-02-25T02:07:14Z\",\n\t    \"description\": \"Income salary Bud\",\n\t    \"status\": \"booked\",\n\t    \"currency\": \"GBP\",\n        \"amount\": \"4500.00\"\n\t  }\n\t  \n\t  ,\n\t  {\n\t    \"provider\": \"Barclays\",\n\t    \"account_id\": \"99473c28-21cf-4a9a-b79e-fd643dd7a4bc\",\n\t    \"transaction_id\": \"dZyaKRwkKZULmmkd0wkLc0wLKo5zd123123f1\",\n\t    \"date_time\": \"2023-04-01T02:07:14Z\",\n\t    \"description\": \"Donuts\",\n\t    \"status\": \"booked\",\n\t    \"currency\": \"GBP\",\n        \"amount\": \"-5.99\"\n\t  },\n\t  {\n\t    \"provider\": \"Barclays\",\n\t    \"account_id\": \"99473c28-21cf-4a9a-b79e-fd643dd7a4bc\",\n\t    \"transaction_id\": \"dZyaKRwkKZULmmkd0wkLc0wLKo5zd123123f2\",\n\t    \"date_time\": \"2023-04-01T02:07:14Z\",\n\t    \"description\": \"Donuts\",\n\t    \"status\": \"booked\",\n\t    \"currency\": \"GBP\",\n        \"amount\": \"-5.99\"\n\t  }\n\t  \n\t  ,\n\t  {\n\t    \"provider\": \"Barclays\",\n\t    \"account_id\": \"99473c28-21cf-4a9a-b79e-fd643dd7a4bc\",\n\t    \"transaction_id\": \"dZyaKRwkKZULmmkd0wkLc0wLKo5zd12312a11\",\n\t    \"date_time\": \"2023-02-01T02:07:14Z\",\n\t    \"description\": \"bet365 payment\",\n\t    \"status\": \"booked\",\n\t    \"currency\": \"GBP\",\n        \"amount\": \"-100.00\"\n\t  },\n\t  {\n\t    \"provider\": \"Barclays\",\n\t    \"account_id\": \"99473c28-21cf-4a9a-b79e-fd643dd7a4bc\",\n\t    \"transaction_id\": \"dZyaKRwkKZULmmkd0wkLc0wLKo5zd12312a12\",\n\t    \"date_time\": \"2023-02-02T02:07:14Z\",\n\t    \"description\": \"bet365 payment\",\n\t    \"status\": \"booked\",\n\t    \"currency\": \"GBP\",\n        \"amount\": \"-800.00\"\n\t  },\n\t  {\n\t    \"provider\": \"Barclays\",\n\t    \"account_id\": \"99473c28-21cf-4a9a-b79e-fd643dd7a4bc\",\n\t    \"transaction_id\": \"dZyaKRwkKZULmmkd0wkLc0wLKo5zd12312a14\",\n\t    \"date_time\": \"2023-02-05T02:07:14Z\",\n\t    \"description\": \"bet365 payment\",\n\t    \"status\": \"booked\",\n\t    \"currency\": \"GBP\",\n        \"amount\": \"-1800.00\"\n\t  },\n\t  {\n\t    \"provider\": \"Barclays\",\n\t    \"account_id\": \"99473c28-21cf-4a9a-b79e-fd643dd7a4bc\",\n\t    \"transaction_id\": \"dZyaKRwkKZULmmkd0wkLc0wLKo5zd12312a13\",\n\t    \"date_time\": \"2023-02-03T02:07:14Z\",\n\t    \"description\": \"bet365 income\",\n\t    \"status\": \"booked\",\n\t    \"currency\": \"GBP\",\n        \"amount\": \"1300.00\"\n\t  }\n\t  \n\t  ,\n\t  {\n\t    \"provider\": \"Barclays\",\n\t    \"account_id\": \"99473c28-21cf-4a9a-b79e-fd643dd7a4bc\",\n\t    \"transaction_id\": \"dZyaKRwkKZULmmkd0wkLc0wLKo5zd12312a21\",\n\t    \"date_time\": \"2023-04-07T15:07:14Z\",\n\t    \"description\": \"Spotify\",\n\t    \"status\": \"booked\",\n\t    \"currency\": \"GBP\",\n        \"amount\": \"13.00\"\n\t  }\n\t  \n\t],\n\t\"transaction_windows\": [\n\t  {\n\t    \"account_id\": \"99473c28-21cf-4a9a-b79e-fd643dd7a4bc\",\n\t    \"start\": \"2023-01-05T02:07:14Z\",\n\t    \"end\": \"2023-04-08T02:07:14Z\"\n\t  }\n\t]\n  }\n]"
								},
								"url": {
									"raw": "{{proxy_url}}v2/ingest/transactions",
									"host": [
										"{{proxy_url}}v2"
									],
									"path": [
										"ingest",
										"transactions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Transaction Ingestion Task Status (deprecated)",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/bud-transaction-v2+json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"customer_id\": \"8e10757f-4f18-41d6-a5a7-a7ae56bccdd7\",\n    \"customer_secret\": \"531d99d9f2bfe1d2bf07f010cfeb0c81c65527ced517d4a9b9465baf14a75b8e\",\n    \"transactions\": [\n\t  {\n\t    \"provider\": \"Plaid\",\n\t    \"account_id\": \"6AbDgadYgAsYkkpgozpYFEadbX4Mp9UaamJLw\",\n\t    \"transaction_id\": \"dZyaKRwkKZULmmkd0wkLc0wLKo5zdbFb8NwRq\",\n\t    \"transaction_type\": \"DEB\",\n\t    \"date\": \"2021-09-01T00:00:00.000Z\",\n\t    \"transaction_description\": \"BINANCE BCC3B1DEED FT\",\n\t    \"credit_debit_indicator\": \"incoming_credit\",\n\t    \"status\": \"booked\",\n\t    \"counterparty\": {\n\t      \"name\": \"UNK\",\n\t      \"address\": \"UNK\",\n\t      \"schema\": \"SortCodeAccountNumber\",\n\t      \"identifier\": \"UNK\"\n\t    },\n\t    \"amount\": {\n\t      \"amount\": \"10000.0\",\n\t      \"curency\": \"GBP\"\n\t    }\n\t  }\n\t]\n  }\n]"
								},
								"url": {
									"raw": "{{proxy_url}}v1/ingest/transactions/{{ingestion_task_id}}",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"ingest",
										"transactions",
										"{{ingestion_task_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Ingestion Task Status (deprecated)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}v2/ingest/status/{{ingestion_task_id}}",
									"host": [
										"{{proxy_url}}v2"
									],
									"path": [
										"ingest",
										"status",
										"{{ingestion_task_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Ingestion Task Status V3",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}ingestion/v3/tasks/{{ingestion_task_id}}",
									"host": [
										"{{proxy_url}}ingestion"
									],
									"path": [
										"v3",
										"tasks",
										"{{ingestion_task_id}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Financial Data API",
			"item": [
				{
					"name": "Retrieve Financial Data",
					"item": [
						{
							"name": "Retrieve Accounts V2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Response has data\"] = jsonData.data;",
											"var firstElement = jsonData.data[0]",
											"",
											"pm.environment.set(\"bank_account_id\", firstElement.account_id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{proxy_url}}financial/v2/accounts",
									"host": [
										"{{proxy_url}}financial"
									],
									"path": [
										"v2",
										"accounts"
									],
									"query": [
										{
											"key": "currency",
											"value": null,
											"description": "Use this parameter to filter the results returned on the currency associated with each result. Multiple values are accepted. If this parameter is not provided then results of any currency will be returned.",
											"disabled": true
										},
										{
											"key": "provider",
											"value": null,
											"description": "Use this parameter to filter the results returned on the provider associated with each result. Multiple values are accepted. If this parameter is not provided then results of any provider will be returned",
											"disabled": true
										},
										{
											"key": "account_type",
											"value": null,
											"description": "Use this parameter to filter the results returned on the account_type associated with each result. Multiple values are accepted. If this parameter is not provided then results of any account_type will be returned.",
											"disabled": true
										},
										{
											"key": "usage_type",
											"value": null,
											"description": "Use this parameter to filter the results returned on the usage_type associated with each result. Multiple values are accepted. If this parameter is not provided then results of any usage_type will be returned.",
											"disabled": true
										},
										{
											"key": "holder_relationship_type",
											"value": null,
											"description": "Use this parameter to filter the results returned on the holder_relationship_type associated with each result. Multiple values are accepted. If this parameter is not provided then results of any holder_relationship_type will be returned.",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Account By ID V2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{proxy_url}}financial/v2/accounts/{{bank_account_id}}",
									"host": [
										"{{proxy_url}}financial"
									],
									"path": [
										"v2",
										"accounts",
										"{{bank_account_id}}"
									]
								},
								"description": "Retrieves a customer's connected account by its ID."
							},
							"response": []
						},
						{
							"name": "Retrieve Accounts V3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Response has data\"] = jsonData.data;",
											"var firstElement = jsonData.data[0]",
											"",
											"pm.environment.set(\"bank_account_id\", firstElement.account_id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{proxy_url}}financial/v3/accounts",
									"host": [
										"{{proxy_url}}financial"
									],
									"path": [
										"v3",
										"accounts"
									],
									"query": [
										{
											"key": "currency",
											"value": null,
											"description": "Use this parameter to filter the results returned on the currency associated with each result. Multiple values are accepted. If this parameter is not provided then results of any currency will be returned.",
											"disabled": true
										},
										{
											"key": "provider",
											"value": null,
											"description": "Use this parameter to filter the results returned on the provider associated with each result. Multiple values are accepted. If this parameter is not provided then results of any provider will be returned",
											"disabled": true
										},
										{
											"key": "account_type",
											"value": null,
											"description": "Use this parameter to filter the results returned on the account_type associated with each result. Multiple values are accepted. If this parameter is not provided then results of any account_type will be returned.",
											"disabled": true
										},
										{
											"key": "usage_type",
											"value": null,
											"description": "Use this parameter to filter the results returned on the usage_type associated with each result. Multiple values are accepted. If this parameter is not provided then results of any usage_type will be returned.",
											"disabled": true
										},
										{
											"key": "holder_relationship_type",
											"value": null,
											"description": "Use this parameter to filter the results returned on the holder_relationship_type associated with each result. Multiple values are accepted. If this parameter is not provided then results of any holder_relationship_type will be returned.",
											"disabled": true
										},
										{
											"key": "include_all_balances",
											"value": null,
											"description": "Use this parameter to include all balances associated with each account. If this parameter is not provided then only the pending and booked balance will be returned where available.",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Account By ID V3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{proxy_url}}financial/v3/accounts/{{bank_account_id}}",
									"host": [
										"{{proxy_url}}financial"
									],
									"path": [
										"v3",
										"accounts",
										"{{bank_account_id}}"
									]
								},
								"description": "Retrieves a customer's connected account by its ID."
							},
							"response": []
						},
						{
							"name": "Retrieve Balances over time",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									},
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "default"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{proxy_url}}financial/v2/balances",
									"host": [
										"{{proxy_url}}financial"
									],
									"path": [
										"v2",
										"balances"
									],
									"query": [
										{
											"key": "from",
											"value": "2022-11-25",
											"disabled": true
										},
										{
											"key": "to",
											"value": "2023-02-01",
											"disabled": true
										},
										{
											"key": "granularity",
											"value": "annually",
											"disabled": true
										}
									]
								},
								"description": "List the balances of each bank account for a customer accross all ingestion sources. Ordered by balance date.\n\nIt calculates the balance for each date, by iterating from the date the account was last refreshed to the to and from dates provided. It then checks all the transactions within this range, calculating the balance at the end of each day.\n\nThis endpoint limits the date from which it gets balances from either by the oldest transaction_window on the account if they are present, or by the oldest transaction within the requested date range available.\n\nFor users ingesting data via the Ingest Accounts endpoint, you can increase the range and accuracy of the data supplied from this service by including the transaction_window field upon acccount ingestion."
							},
							"response": []
						},
						{
							"name": "Retrieve Balances over time by account",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									},
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "default"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{proxy_url}}financial/v2/accounts/{{bank_account_id}}/balances",
									"host": [
										"{{proxy_url}}financial"
									],
									"path": [
										"v2",
										"accounts",
										"{{bank_account_id}}",
										"balances"
									],
									"query": [
										{
											"key": "from",
											"value": "2021-11-25",
											"disabled": true
										},
										{
											"key": "to",
											"value": "2023-02-01",
											"disabled": true
										},
										{
											"key": "granularity",
											"value": "annually",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Balances over time V3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									},
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "default"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{proxy_url}}financial/v3/balances",
									"host": [
										"{{proxy_url}}financial"
									],
									"path": [
										"v3",
										"balances"
									],
									"query": [
										{
											"key": "from",
											"value": "2022-11-25",
											"disabled": true
										},
										{
											"key": "to",
											"value": "2023-02-01",
											"disabled": true
										},
										{
											"key": "granularity",
											"value": "annually",
											"disabled": true
										}
									]
								},
								"description": "List the balances of each bank account for a customer accross all ingestion sources. Ordered by balance date.\n\nIt calculates the balance for each date, by iterating from the date the account was last refreshed to the to and from dates provided. It then checks all the transactions within this range, calculating the balance at the end of each day.\n\nThis endpoint limits the date from which it gets balances from either by the oldest transaction_window on the account if they are present, or by the oldest transaction within the requested date range available.\n\nFor users ingesting data via the Ingest Accounts endpoint, you can increase the range and accuracy of the data supplied from this service by including the transaction_window field upon acccount ingestion."
							},
							"response": []
						},
						{
							"name": "Retrieve Balances over time by account V3",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									},
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "default"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{proxy_url}}financial/v3/accounts/{{bank_account_id}}/balances",
									"host": [
										"{{proxy_url}}financial"
									],
									"path": [
										"v3",
										"accounts",
										"{{bank_account_id}}",
										"balances"
									],
									"query": [
										{
											"key": "from",
											"value": "2021-11-25",
											"disabled": true
										},
										{
											"key": "to",
											"value": "2023-02-01",
											"disabled": true
										},
										{
											"key": "granularity",
											"value": "annually",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Transactions V2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"transaction_id\", jsonData.data[0].transaction_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}financial/v2/transactions",
									"host": [
										"{{proxy_url}}financial"
									],
									"path": [
										"v2",
										"transactions"
									],
									"query": [
										{
											"key": "date_from",
											"value": "2020-01-01",
											"disabled": true
										},
										{
											"key": "date_to",
											"value": "2023-10-10",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": "100",
											"disabled": true
										},
										{
											"key": "page_token",
											"value": "",
											"disabled": true
										},
										{
											"key": "account_id",
											"value": "",
											"disabled": true
										},
										{
											"key": "merchant",
											"value": "",
											"disabled": true
										},
										{
											"key": "category_l1",
											"value": "",
											"disabled": true
										},
										{
											"key": "category_l2",
											"value": "",
											"disabled": true
										},
										{
											"key": "include_tags[0]",
											"value": "",
											"disabled": true
										},
										{
											"key": "exclude_tags[0]",
											"value": "",
											"disabled": true
										},
										{
											"key": "updated_after",
											"value": "2024-01-01T00:00:00Z",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Authorised Payments V2",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-ID",
										"value": "{{api_credentials_id}}"
									},
									{
										"key": "X-Customer-ID",
										"value": "{{customer_id}}"
									}
								],
								"url": {
									"raw": "{{proxy_url}}financial/v2/authorised-payments",
									"host": [
										"{{proxy_url}}financial"
									],
									"path": [
										"v2",
										"authorised-payments"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Manage Financial Data",
					"item": [
						{
							"name": "Remove provider data",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "default"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{proxy_url}}v1/provider/{{bank_name}}",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"provider",
										"{{bank_name}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Goals",
					"item": [
						{
							"name": "Savings",
							"item": [
								{
									"name": "Edit Savings Goal",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{auth_token}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Client-Id",
												"value": "{{api_credentials_id}}"
											},
											{
												"key": "X-Customer-Id",
												"value": "{{customer_id}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Holiday Savings\",\n\t\"target_amount\": {\n\t\t\"value\": \"6000.00\",\n\t\t\"currency\": \"GBP\"\n\t},\n\t\"recurrent_amount\": {\n\t\t\"value\": \"1000.00\",\n\t\t\"currency\": \"GBP\"\n\t},\n\t\"target_datetime\": \"2024-12-23T00:00:00Z\"\n}"
										},
										"url": {
											"raw": "{{proxy_url}}goals/v1/savings/{{savings_goal_id}}",
											"host": [
												"{{proxy_url}}goals"
											],
											"path": [
												"v1",
												"savings",
												"{{savings_goal_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Edit savings goal action",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{auth_token}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Client-Id",
												"value": "{{api_credentials_id}}"
											},
											{
												"key": "X-Customer-Id",
												"value": "{{customer_id}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"amount\": {\n\t\t\"value\": \"50.00\"\n\t}\n}"
										},
										"url": {
											"raw": "{{proxy_url}}goals/v1/savings/{{savings_goal_id}}/actions/{{savings_goal_action_id}}",
											"host": [
												"{{proxy_url}}goals"
											],
											"path": [
												"v1",
												"savings",
												"{{savings_goal_id}}",
												"actions",
												"{{savings_goal_action_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create savings goal",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"pm.environment.set(\"savings_goal_id\", jsonData.data.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{auth_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Client-Id",
												"value": "{{api_credentials_id}}"
											},
											{
												"key": "X-Customer-Id",
												"value": "{{customer_id}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"account_id\": \"{{account_id}}\",\n\t\"name\": \"Car Savings\",\n\t\"target_amount\": {\n\t\t\"value\": \"3000.00\",\n\t\t\"currency\": \"GBP\"\n\t},\n\t\"target_datetime\": \"2023-12-23T00:00:00Z\"\n}"
										},
										"url": {
											"raw": "{{proxy_url}}goals/v1/savings",
											"host": [
												"{{proxy_url}}goals"
											],
											"path": [
												"v1",
												"savings"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create savings goal action",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"pm.environment.set(\"savings_goal_action_id\", jsonData.data.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{auth_token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Client-Id",
												"value": "{{api_credentials_id}}"
											},
											{
												"key": "X-Customer-Id",
												"value": "{{customer_id}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"amount\": {\n\t\t\"value\": \"10.00\",\n\t\t\"currency\": \"GBP\"\n\t},\n\t\"credit_debit_indicator\": \"credit\"\n}"
										},
										"url": {
											"raw": "{{proxy_url}}goals/v1/savings/{{savings_goal_id}}/actions",
											"host": [
												"{{proxy_url}}goals"
											],
											"path": [
												"v1",
												"savings",
												"{{savings_goal_id}}",
												"actions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch Savings Goals",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{auth_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-Client-Id",
												"value": "{{api_credentials_id}}"
											},
											{
												"key": "X-Customer-Id",
												"value": "{{customer_id}}"
											}
										],
										"url": {
											"raw": "{{proxy_url}}goals/v1/savings",
											"host": [
												"{{proxy_url}}goals"
											],
											"path": [
												"v1",
												"savings"
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch Savings Goal Actions",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{auth_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-Client-Id",
												"value": "{{api_credentials_id}}"
											},
											{
												"key": "X-Customer-Id",
												"value": "{{customer_id}}"
											}
										],
										"url": {
											"raw": "{{proxy_url}}goals/v1/savings/{{savings_goal_id}}/actions",
											"host": [
												"{{proxy_url}}goals"
											],
											"path": [
												"v1",
												"savings",
												"{{savings_goal_id}}",
												"actions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Savings Goal",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{auth_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "X-Client-Id",
												"value": "{{api_credentials_id}}"
											},
											{
												"key": "X-Customer-Id",
												"value": "{{customer_id}}"
											}
										],
										"url": {
											"raw": "{{proxy_url}}goals/v1/savings/{{savings_goal_id}}",
											"host": [
												"{{proxy_url}}goals"
											],
											"path": [
												"v1",
												"savings",
												"{{savings_goal_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Savings Goal Action",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{auth_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "X-Client-Id",
												"value": "{{api_credentials_id}}"
											},
											{
												"key": "X-Customer-Id",
												"value": "{{customer_id}}"
											}
										],
										"url": {
											"raw": "{{proxy_url}}goals/v1/savings/{{savings_goal_id}}/actions/{{savings_goal_action_id}}",
											"host": [
												"{{proxy_url}}goals"
											],
											"path": [
												"v1",
												"savings",
												"{{savings_goal_id}}",
												"actions",
												"{{savings_goal_action_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete All Goals",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{auth_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "X-Client-Id",
												"value": "{{api_credentials_id}}"
											},
											{
												"key": "X-Customer-Id",
												"value": "{{customer_id}}"
											}
										],
										"url": {
											"raw": "{{proxy_url}}goals/v1/savings",
											"host": [
												"{{proxy_url}}goals"
											],
											"path": [
												"v1",
												"savings"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Spending Budgets",
					"item": [
						{
							"name": "Edit Spending Budget",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount\": {\"value\": \"350.00\"},\n    \"recurrency\": {\n        \"period\": \"monthly\",\n        \"starting_day\": 1\n    },\n    \"include\": {\n        \"categories\": [\n            {\n                \"l1\": \"entertainment\",\n                \"l2\": [\"cinema\", \"leisure_and_amusement_activities\", \"theatre_concerts_and_tickets\", \"sport_events\"]\n            }\n        ],\n        \"merchants\": {\n            \"slugs\": [\"uber\", \"addisonlee\"]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{proxy_url}}goals/v1/spending-budgets/{{budget_id}}",
									"host": [
										"{{proxy_url}}goals"
									],
									"path": [
										"v1",
										"spending-budgets",
										"{{budget_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Spending Budget",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"budget_id\", jsonData.data.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Going Out Budget\",\n    \"amount\": {\"value\": \"250.00\", \"currency\": \"GBP\"},\n    \"account_id\": \"89e3e6fe2ccbb1bb41876a126472b66b\",\n    \"recurrency\": {\n        \"period\": \"monthly\",\n        \"starting_day\": 1\n    },\n    \"include\": {\n        \"categories\": [\n            {\n                \"l1\": \"entertainment\",\n                \"l2\": [\"cinema\", \"leisure_and_amusement_activities\", \"theatre_concerts_and_tickets\", \"sport_events\"]\n            },\n            {\n                \"l1\": \"food_and_drink\",\n                \"l2\": [\"bars_and_pubs\"]\n            }\n        ],\n        \"merchants\": {\n            \"slugs\": [\"uber\"]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{proxy_url}}goals/v1/spending-budgets",
									"host": [
										"{{proxy_url}}goals"
									],
									"path": [
										"v1",
										"spending-budgets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fetch Spending Budgets",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}"
									}
								],
								"url": {
									"raw": "{{proxy_url}}goals/v1/spending-budgets",
									"host": [
										"{{proxy_url}}goals"
									],
									"path": [
										"v1",
										"spending-budgets"
									],
									"query": [
										{
											"key": "day",
											"value": "2023-10-24T00:00:00Z",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Fetch Spending Budget Transactions",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}"
									}
								],
								"url": {
									"raw": "{{proxy_url}}goals/v1/spending-budgets/{{budget_id}}/transactions",
									"host": [
										"{{proxy_url}}goals"
									],
									"path": [
										"v1",
										"spending-budgets",
										"{{budget_id}}",
										"transactions"
									],
									"query": [
										{
											"key": "day",
											"value": "2023-10-24T00:00:00Z",
											"description": "ne",
											"disabled": true
										},
										{
											"key": "next_page_token",
											"value": null,
											"disabled": true
										},
										{
											"key": "page_size",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Spending Budget",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}"
									}
								],
								"url": {
									"raw": "{{proxy_url}}goals/v1/spending-budgets/{{budget_id}}",
									"host": [
										"{{proxy_url}}goals"
									],
									"path": [
										"v1",
										"spending-budgets",
										"{{budget_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete All Spending Budgets",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}"
									}
								],
								"url": {
									"raw": "{{proxy_url}}goals/v1/spending-budgets",
									"host": [
										"{{proxy_url}}goals"
									],
									"path": [
										"v1",
										"spending-budgets"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Correct Financial Data",
					"item": [
						{
							"name": "Correct Transaction Categories V2",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "default"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n     {\n          \"include_similar\": true,\n          \"transaction_id\": \"{{transaction_id}}\",\n          \"category_l1\": \"company_equipment\",\n          \"category_l2\": \"it_equipment\"\n     }\n]"
								},
								"url": {
									"raw": "{{proxy_url}}corrections/v2/categories",
									"host": [
										"{{proxy_url}}corrections"
									],
									"path": [
										"v2",
										"categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Correct Transaction Merchants V2",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "default"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"include_similar\": true,\n    \"transactions\":[\n        \"{{transaction_id}}\"\n    ],\n    \"merchant_id\": \"{{correction_merchant_id}}\"\n}"
								},
								"url": {
									"raw": "{{proxy_url}}corrections/v2/merchants",
									"host": [
										"{{proxy_url}}corrections"
									],
									"path": [
										"v2",
										"merchants"
									]
								}
							},
							"response": []
						},
						{
							"name": "Correction Merchant Search",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}"
									}
								],
								"url": {
									"raw": "{{proxy_url}}corrections/v2/merchants/search/tesco",
									"host": [
										"{{proxy_url}}corrections"
									],
									"path": [
										"v2",
										"merchants",
										"search",
										"tesco"
									]
								}
							},
							"response": []
						},
						{
							"name": "Similar Transactions",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}"
									}
								],
								"url": {
									"raw": "{{proxy_url}}corrections/v2/merchants/similar/dZyaKRwkKZULmmkd0wkLc0wLKo5zd123123c1",
									"host": [
										"{{proxy_url}}corrections"
									],
									"path": [
										"v2",
										"merchants",
										"similar",
										"dZyaKRwkKZULmmkd0wkLc0wLKo5zd123123c1"
									],
									"query": [
										{
											"key": "exclude_source",
											"value": "true",
											"description": "Toggle whether the endpoint returns the transaction used as part of the request",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Similar Transactions Including Merchants",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}"
									}
								],
								"url": {
									"raw": "{{proxy_url}}corrections/v2/merchants/similar/dZyaKRwkKZULmmkd0wkLc0wLKo5zd123123c1",
									"host": [
										"{{proxy_url}}corrections"
									],
									"path": [
										"v2",
										"merchants",
										"similar",
										"dZyaKRwkKZULmmkd0wkLc0wLKo5zd123123c1"
									],
									"query": [
										{
											"key": "exclude_source",
											"value": "true",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Enrichment API",
			"item": [
				{
					"name": "Enrichment Resources",
					"item": [
						{
							"name": "Retrieve Categories",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}resources/v2/categories",
									"host": [
										"{{proxy_url}}resources"
									],
									"path": [
										"v2",
										"categories"
									],
									"query": [
										{
											"key": "model",
											"value": "uk-v2",
											"description": "The name of the model for which categories should be returned. See the Retrieve Categorisation Models V2 endpoint for available model names.",
											"disabled": true
										},
										{
											"key": "format",
											"value": "map",
											"description": "Determines if the response will be structured:\n - As a flat object where all categories and subcategories are listed separately under different fields.\n - As a map where all categories are listed as objects themselves with their respective subcategories listed in fields within the category objects.",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Available Categorisation Models",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}resources/v2/categories/models",
									"host": [
										"{{proxy_url}}resources"
									],
									"path": [
										"v2",
										"categories",
										"models"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Enrichment Totals",
					"item": [
						{
							"name": "Retrieve Category Totals V2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{proxy_url}}aggregations/v2/totals/categories",
									"host": [
										"{{proxy_url}}aggregations"
									],
									"path": [
										"v2",
										"totals",
										"categories"
									],
									"query": [
										{
											"key": "from",
											"value": "2020-01-01T00:00:00Z",
											"description": "RFC3339 Timestamp indicating the start of the window of transactions to include. Defaults to now-6m",
											"disabled": true
										},
										{
											"key": "to",
											"value": "2023-01-01T00:00:00Z",
											"description": "RFC3339 Timestamp indicating the end of the window of transactions to include. Defaults to now",
											"disabled": true
										},
										{
											"key": "category",
											"value": "bills.utilities,general",
											"description": "If set, will filter result to include only the l1 categories specified, comma seperated.  If needed, filtering can be done on an l2 category using the syntax `l1.l2`. Where an l2 category filter is applied, only those l2s will be aggregated in the total for the l1 category. Defaults to include all.",
											"disabled": true
										},
										{
											"key": "currency",
											"value": "GBP,EUR",
											"description": "List of currency codes to include, if not set will default to include all",
											"disabled": true
										},
										{
											"key": "include_l2",
											"value": "true",
											"description": "If set to `true` the result of category totals will include the l2 totals used in the computation",
											"disabled": true
										},
										{
											"key": "category_filter",
											"value": "essential",
											"description": "Filters the categories included in the category totals to just those with the label(s) specified by this parameter",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Category Totals Trends V2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{proxy_url}}aggregations/v2/totals/categories/trends",
									"host": [
										"{{proxy_url}}aggregations"
									],
									"path": [
										"v2",
										"totals",
										"categories",
										"trends"
									],
									"query": [
										{
											"key": "from",
											"value": "2020-01-01T00:00:00Z",
											"description": "RFC3339 Timestamp indicating the start of the window of transactions to include. Defaults to now-6m",
											"disabled": true
										},
										{
											"key": "to",
											"value": "2023-01-01T00:00:00Z",
											"description": "RFC3339 Timestamp indicating the end of the window of transactions to include. Defaults to now",
											"disabled": true
										},
										{
											"key": "category",
											"value": "bills.utilities,general",
											"description": "If set, will filter result to include only the l1 categories specified, comma seperated.  If needed, filtering can be done on an l2 category using the syntax `l1.l2`. Where an l2 category filter is applied, only those l2s will be aggregated in the total for the l1 category. Defaults to include all.",
											"disabled": true
										},
										{
											"key": "currency",
											"value": "GBP,EUR",
											"description": "List of currency codes to include, if not set will default to include all",
											"disabled": true
										},
										{
											"key": "include_l2",
											"value": "true",
											"description": "If set to `true` the result of category totals will include the l2 totals used in the computation",
											"disabled": true
										},
										{
											"key": "granularity",
											"value": "weekly",
											"description": "enumeration defining the granularity of the transaction windows:\n- `daily`\n- `weekly`\n- `biweekly`\n- `monthly`\n- `quarterly`\n- `six_monthly`\n- `annually`\n\n. defaults to monthly",
											"disabled": true
										},
										{
											"key": "category_filter",
											"value": "essential",
											"description": "Filters the categories included in the category totals to just those with the label(s) specified by this parameter",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Merchants totals V2",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									},
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-From",
										"value": "2020-01-01",
										"type": "text"
									},
									{
										"key": "X-To",
										"value": "2023-05-01",
										"type": "text"
									},
									{
										"key": "X-Include-Categories",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-Exclude-Categories",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proxy_url}}v2/merchants/totals",
									"host": [
										"{{proxy_url}}v2"
									],
									"path": [
										"merchants",
										"totals"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Benefits Total",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-From",
										"value": "2021-02-28",
										"disabled": true
									},
									{
										"key": "X-To",
										"value": "2023-01-29",
										"disabled": true
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									},
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}v1/benefits/totals",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"benefits",
										"totals"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Merchant Totals V1",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									},
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-From",
										"value": "2020-01-01",
										"type": "text"
									},
									{
										"key": "X-To",
										"value": "2023-05-01",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}v1/merchants/totals",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"merchants",
										"totals"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Smart Finders API",
			"item": [
				{
					"name": "Regular Payments Finder",
					"item": [
						{
							"name": "Retrieve Regular transactions",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}v1/regular-transactions",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"regular-transactions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Forecasted Transactions V2",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}v2/future-transactions?months=3&change_percentage\\[subcategory\\]=change_percentage[all]=2.0",
									"host": [
										"{{proxy_url}}v2"
									],
									"path": [
										"future-transactions"
									],
									"query": [
										{
											"key": "months",
											"value": "3"
										},
										{
											"key": "change_percentage\\[subcategory\\]",
											"value": "change_percentage[all]=2.0"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Income Finder",
					"item": [
						{
							"name": "Retrieve Income Transactions V2",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-From",
										"value": "2020-01-29",
										"disabled": true
									},
									{
										"key": "X-To",
										"value": "2022-03-29",
										"disabled": true
									},
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}v2/income",
									"host": [
										"{{proxy_url}}v2"
									],
									"path": [
										"income"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Benefits Transactions",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-From",
										"value": "2020-02-29",
										"disabled": true
									},
									{
										"key": "X-To",
										"value": "2022-03-29",
										"disabled": true
									},
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}v1/benefits",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"benefits"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Loan Finder",
					"item": [
						{
							"name": "Retrieve Loan Transactions",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-From",
										"value": "2020-01-29",
										"disabled": true
									},
									{
										"key": "X-To",
										"value": "2023-01-29",
										"disabled": true
									},
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}v1/loans",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"loans"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Debt Finder",
					"item": [
						{
							"name": "Retrieve Debt Collection Transactions",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-From",
										"value": "2020-02-29",
										"disabled": true
									},
									{
										"key": "X-To",
										"value": "2023-01-29",
										"disabled": true
									},
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}v1/debt-collection",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"debt-collection"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Product Finder",
					"item": [
						{
							"name": "Retrieve Financial Products V2",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}insights/v2/products",
									"host": [
										"{{proxy_url}}insights"
									],
									"path": [
										"v2",
										"products"
									],
									"query": [
										{
											"key": "from",
											"value": "",
											"description": "Filter from this date (format: YYYY-MM-DD).",
											"disabled": true
										},
										{
											"key": "to",
											"value": "",
											"description": "Filter to this date (format: YYYY-MM-DD).",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Subscription Finder",
					"item": [
						{
							"name": "Retrieve Subscriptions",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-From",
										"value": "2020-01-29",
										"disabled": true
									},
									{
										"key": "X-To",
										"value": "2023-01-29",
										"disabled": true
									},
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}v1/subscriptions",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"subscriptions"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Insights API",
			"item": [
				{
					"name": "Retrieve Actionable Insights",
					"item": [
						{
							"name": "Get Balances Insights",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}insights/v1/actionable/balances",
									"host": [
										"{{proxy_url}}insights"
									],
									"path": [
										"v1",
										"actionable",
										"balances"
									],
									"query": [
										{
											"key": "from",
											"value": null,
											"description": "A start time in RFC3339 format.",
											"disabled": true
										},
										{
											"key": "to",
											"value": null,
											"description": "An end time in RFC3339 format.",
											"disabled": true
										},
										{
											"key": "enabled_insights",
											"value": null,
											"description": "A comma-separated list of insight types.",
											"disabled": true
										},
										{
											"key": "close_to_credit_limit.percentage_utilisation_threshold",
											"value": null,
											"description": "A minimum percentage utilisation of the credit limit.",
											"disabled": true
										},
										{
											"key": "low_balance.balance_threshold",
											"value": null,
											"description": "A balance threshold for the low balance insight.",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Balances Insight Details",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}insights/v1/actionable/balances/{{insight_type}}/{{insight_id}}/details",
									"host": [
										"{{proxy_url}}insights"
									],
									"path": [
										"v1",
										"actionable",
										"balances",
										"{{insight_type}}",
										"{{insight_id}}",
										"details"
									],
									"query": [
										{
											"key": "from",
											"value": "",
											"description": "A start time in RFC3339 format.",
											"disabled": true
										},
										{
											"key": "to",
											"value": "",
											"description": "An end time in RFC3339 format.",
											"disabled": true
										},
										{
											"key": "close_to_credit_limit.percentage_utilisation_threshold",
											"value": "",
											"description": "A minimum percentage utilisation of the credit limit.",
											"disabled": true
										},
										{
											"key": "low_balance.balance_threshold",
											"value": "",
											"description": "A balance threshold for the low balance insight.",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Income Insights",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}insights/v1/actionable/income",
									"host": [
										"{{proxy_url}}insights"
									],
									"path": [
										"v1",
										"actionable",
										"income"
									],
									"query": [
										{
											"key": "from",
											"value": "",
											"description": "A start time in RFC3339 format.",
											"disabled": true
										},
										{
											"key": "to",
											"value": "",
											"description": "An end time in RFC3339 format.",
											"disabled": true
										},
										{
											"key": "enabled_insights",
											"value": "",
											"description": "A comma-separated list of insight types.",
											"disabled": true
										},
										{
											"key": "gambling_income.minimum_monthly_threshold",
											"value": "",
											"description": "A minimum absolute total of gambling income.",
											"disabled": true
										},
										{
											"key": "gambling_income.minimum_percentage_total_threshold",
											"value": "",
											"description": "A minimum percentage of all income that must be gambling income.",
											"disabled": true
										},
										{
											"key": "late_income.minimum_value_threshold",
											"value": null,
											"description": "A minimum value of a late transaction.",
											"disabled": true
										},
										{
											"key": "late_income.minimum_days_late_threshold",
											"value": null,
											"description": "A minimum number of days late for a transaction to be.",
											"disabled": true
										},
										{
											"key": "pension_income.minimum_monthly_threshold",
											"value": null,
											"description": "A minimum absolute total of pension income.",
											"disabled": true
										},
										{
											"key": "pension_income.minimum_percentage_total_threshold",
											"value": null,
											"description": "A minimum percentage of all income that must be pension income.",
											"disabled": true
										},
										{
											"key": "regular_income_changed.minimum_absoute_change_threshold",
											"value": null,
											"description": "A minimum absolute change between the previous and latest amounts.",
											"disabled": true
										},
										{
											"key": "regular_income_changed.minimum_percentage_change_threshold",
											"value": null,
											"description": "A minimum percentage change between the previous and latest amounts.",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Income Insight Details",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}insights/v1/actionable/income/{{insight_type}}/{{insight_id}}/details",
									"host": [
										"{{proxy_url}}insights"
									],
									"path": [
										"v1",
										"actionable",
										"income",
										"{{insight_type}}",
										"{{insight_id}}",
										"details"
									],
									"query": [
										{
											"key": "from",
											"value": "",
											"description": "A start time in RFC3339 format.",
											"disabled": true
										},
										{
											"key": "to",
											"value": "",
											"description": "An end time in RFC3339 format.",
											"disabled": true
										},
										{
											"key": "gambling_income.minimum_monthly_threshold",
											"value": "",
											"description": "A minimum absolute total of gambling income.",
											"disabled": true
										},
										{
											"key": "gambling_income.minimum_percentage_total_threshold",
											"value": "",
											"description": "A minimum percentage of all income that must be gambling income.",
											"disabled": true
										},
										{
											"key": "late_income.minimum_value_threshold",
											"value": "",
											"description": "A minimum value of a late transaction.",
											"disabled": true
										},
										{
											"key": "late_income.minimum_days_late_threshold",
											"value": "",
											"description": "A minimum number of days late for a transaction to be.",
											"disabled": true
										},
										{
											"key": "pension_income.minimum_monthly_threshold",
											"value": "",
											"description": "A minimum absolute total of pension income.",
											"disabled": true
										},
										{
											"key": "pension_income.minimum_percentage_total_threshold",
											"value": "",
											"description": "A minimum percentage of all income that must be pension income.",
											"disabled": true
										},
										{
											"key": "regular_income_changed.minimum_absoute_change_threshold",
											"value": "",
											"description": "A minimum absolute change between the previous and latest amounts.",
											"disabled": true
										},
										{
											"key": "regular_income_changed.minimum_percentage_change_threshold",
											"value": "",
											"description": "A minimum percentage change between the previous and latest amounts.",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Spending Insights",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}insights/v1/actionable/spending",
									"host": [
										"{{proxy_url}}insights"
									],
									"path": [
										"v1",
										"actionable",
										"spending"
									],
									"query": [
										{
											"key": "from",
											"value": "",
											"description": "A start time in RFC3339 format.",
											"disabled": true
										},
										{
											"key": "to",
											"value": "",
											"description": "An end time in RFC3339 format.",
											"disabled": true
										},
										{
											"key": "enabled_insights",
											"value": "",
											"description": "A comma-separated list of insight types.",
											"disabled": true
										},
										{
											"key": "late_payment.minimum_value_threshold",
											"value": "",
											"description": "A minimum value of a late transaction.",
											"disabled": true
										},
										{
											"key": "late_payment.minimum_days_late_threshold",
											"value": "",
											"description": "A minimum number of days late for a transaction to be.",
											"disabled": true
										},
										{
											"key": "regular_payment_changed.minimum_absoute_change_threshold",
											"value": "",
											"description": "A minimum absolute change between the previous and latest amounts.",
											"disabled": true
										},
										{
											"key": "regular_payment_changed.minimum_percentage_change_threshold",
											"value": "",
											"description": "A minimum percentage change between the previous and latest amounts.",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Spending Insight Details",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}insights/v1/actionable/spending/{{insight_type}}/{{insight_id}}/details",
									"host": [
										"{{proxy_url}}insights"
									],
									"path": [
										"v1",
										"actionable",
										"spending",
										"{{insight_type}}",
										"{{insight_id}}",
										"details"
									],
									"query": [
										{
											"key": "from",
											"value": "",
											"description": "A start time in RFC3339 format.",
											"disabled": true
										},
										{
											"key": "to",
											"value": "",
											"description": "An end time in RFC3339 format.",
											"disabled": true
										},
										{
											"key": "late_payment.minimum_value_threshold",
											"value": "",
											"description": "A minimum value of a late transaction.",
											"disabled": true
										},
										{
											"key": "late_payment.minimum_days_late_threshold",
											"value": "",
											"description": "A minimum number of days late for a transaction to be.",
											"disabled": true
										},
										{
											"key": "regular_payment_changed.minimum_absoute_change_threshold",
											"value": "",
											"description": "A minimum absolute change between the previous and latest amounts.",
											"disabled": true
										},
										{
											"key": "regular_payment_changed.minimum_percentage_change_threshold",
											"value": "",
											"description": "A minimum percentage change between the previous and latest amounts.",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Retrieve Report Insights",
					"item": [
						{
							"name": "Get Income Expenditure Insights",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}insights/beta/report/income-expenditure",
									"host": [
										"{{proxy_url}}insights"
									],
									"path": [
										"beta",
										"report",
										"income-expenditure"
									],
									"query": [
										{
											"key": "from",
											"value": null,
											"description": "A start time in RFC3339 format.",
											"disabled": true
										},
										{
											"key": "to",
											"value": null,
											"description": "An end time in RFC3339 format.",
											"disabled": true
										},
										{
											"key": "enabled_insights",
											"value": null,
											"description": "A comma-separated list of insight types.",
											"disabled": true
										},
										{
											"key": "currency",
											"value": null,
											"description": "A 3 digit ISO 4217 currency code (Eg, AUD, GBP, USD)",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Income Expenditure Insights Transactions",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}insights/beta/report/income-expenditure/transactions/{{transactions_reference}}",
									"host": [
										"{{proxy_url}}insights"
									],
									"path": [
										"beta",
										"report",
										"income-expenditure",
										"transactions",
										"{{transactions_reference}}"
									],
									"query": [
										{
											"key": "from",
											"value": null,
											"description": "A start time in RFC3339 format.",
											"disabled": true
										},
										{
											"key": "to",
											"value": null,
											"description": "An end time in RFC3339 format.",
											"disabled": true
										},
										{
											"key": "enabled_insights",
											"value": null,
											"description": "A comma-separated list of insight types.",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Income Health Insights",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}insights/beta/report/income-health",
									"host": [
										"{{proxy_url}}insights"
									],
									"path": [
										"beta",
										"report",
										"income-health"
									],
									"query": [
										{
											"key": "from",
											"value": null,
											"description": "A start time in RFC3339 format.",
											"disabled": true
										},
										{
											"key": "to",
											"value": null,
											"description": "An end time in RFC3339 format.",
											"disabled": true
										},
										{
											"key": "enabled_insights",
											"value": null,
											"description": "A comma-separated list of insight types.",
											"disabled": true
										},
										{
											"key": "currency",
											"value": null,
											"description": "A 3 digit ISO 4217 currency code (Eg, AUD, GBP, USD)",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Income Health Insights Transactions",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}insights/beta/report/income-health/transactions/{{transactions_reference}}",
									"host": [
										"{{proxy_url}}insights"
									],
									"path": [
										"beta",
										"report",
										"income-health",
										"transactions",
										"{{transactions_reference}}"
									],
									"query": [
										{
											"key": "from",
											"value": null,
											"description": "A start time in RFC3339 format.",
											"disabled": true
										},
										{
											"key": "to",
											"value": null,
											"description": "An end time in RFC3339 format.",
											"disabled": true
										},
										{
											"key": "enabled_insights",
											"value": null,
											"description": "A comma-separated list of insight types.",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get merchants Insights",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}insights/beta/report/merchants",
									"host": [
										"{{proxy_url}}insights"
									],
									"path": [
										"beta",
										"report",
										"merchants"
									],
									"query": [
										{
											"key": "from",
											"value": null,
											"description": "A start time in RFC3339 format.",
											"disabled": true
										},
										{
											"key": "to",
											"value": null,
											"description": "An end time in RFC3339 format.",
											"disabled": true
										},
										{
											"key": "enabled_insights",
											"value": null,
											"description": "A comma-separated list of insight types.",
											"disabled": true
										},
										{
											"key": "currency",
											"value": null,
											"description": "A 3 digit ISO 4217 currency code (Eg, AUD, GBP, USD)",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get merchants Insights Transactions",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}insights/beta/report/merchants/transactions/{{transactions_reference}}",
									"host": [
										"{{proxy_url}}insights"
									],
									"path": [
										"beta",
										"report",
										"merchants",
										"transactions",
										"{{transactions_reference}}"
									],
									"query": [
										{
											"key": "from",
											"value": null,
											"description": "A start time in RFC3339 format.",
											"disabled": true
										},
										{
											"key": "to",
											"value": null,
											"description": "An end time in RFC3339 format.",
											"disabled": true
										},
										{
											"key": "enabled_insights",
											"value": null,
											"description": "A comma-separated list of insight types.",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Unauthorised Overdraft Insights",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}insights/beta/report/balance/unauthorised-overdraft",
									"host": [
										"{{proxy_url}}insights"
									],
									"path": [
										"beta",
										"report",
										"balance",
										"unauthorised-overdraft"
									],
									"query": [
										{
											"key": "from",
											"value": null,
											"description": "A start time in RFC3339 format.",
											"disabled": true
										},
										{
											"key": "to",
											"value": null,
											"description": "An end time in RFC3339 format.",
											"disabled": true
										},
										{
											"key": "enabled_insights",
											"value": null,
											"description": "A comma-separated list of insight types.",
											"disabled": true
										},
										{
											"key": "currency",
											"value": null,
											"description": "A 3 digit ISO 4217 currency code (Eg, AUD, GBP, USD)",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Unauthorised Overdraft Insights Transactions",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}insights/beta/report/balance/unauthorised-overdraft/transactions/{{transactions_reference}}",
									"host": [
										"{{proxy_url}}insights"
									],
									"path": [
										"beta",
										"report",
										"balance",
										"unauthorised-overdraft",
										"transactions",
										"{{transactions_reference}}"
									],
									"query": [
										{
											"key": "from",
											"value": null,
											"description": "A start time in RFC3339 format.",
											"disabled": true
										},
										{
											"key": "to",
											"value": null,
											"description": "An end time in RFC3339 format.",
											"disabled": true
										},
										{
											"key": "enabled_insights",
											"value": null,
											"description": "A comma-separated list of insight types.",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Custom Insights",
					"item": [
						{
							"name": "Create new custom insight",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "undefined",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"query\": \"INFER active_gambler FROM transactions WHERE category_l1 = 'gambling_and_lotteries' AND credit_debit_indicator = 'debit' AND currency = 'GBP' AND DATETIME_FROM(date_time, 0, 1, 0)\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proxy_url}}insights/v1/custom/manage",
									"host": [
										"{{proxy_url}}insights"
									],
									"path": [
										"v1",
										"custom",
										"manage"
									]
								}
							},
							"response": []
						},
						{
							"name": "List existing custom insights",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "undefined",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}insights/v1/custom/manage",
									"host": [
										"{{proxy_url}}insights"
									],
									"path": [
										"v1",
										"custom",
										"manage"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update existing custom insight",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "undefined",
											"type": "any"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"query\": \"INFER active_gambler FROM transactions WHERE category_l1 = 'gambling_and_lotteries' AND credit_debit_indicator = 'debit' AND currency = 'GBP' AND DATETIME_FROM(date_time, 0, 1, 0)\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proxy_url}}insights/v1/custom/manage/{custom_insight_id}",
									"host": [
										"{{proxy_url}}insights"
									],
									"path": [
										"v1",
										"custom",
										"manage",
										"{custom_insight_id}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete existing custom insight",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "undefined",
											"type": "any"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}insights/v1/custom/manage/{custom_insight_id}",
									"host": [
										"{{proxy_url}}insights"
									],
									"path": [
										"v1",
										"custom",
										"manage",
										"{custom_insight_id}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete all existing custom insights",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "undefined",
											"type": "any"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}insights/v1/custom/manage/all",
									"host": [
										"{{proxy_url}}insights"
									],
									"path": [
										"v1",
										"custom",
										"manage",
										"all"
									]
								}
							},
							"response": []
						},
						{
							"name": "Build custom insights profile",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "undefined",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}insights/v1/custom/profile",
									"host": [
										"{{proxy_url}}insights"
									],
									"path": [
										"v1",
										"custom",
										"profile"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve custom insights profile",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "undefined",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}insights/v1/custom/profile",
									"host": [
										"{{proxy_url}}insights"
									],
									"path": [
										"v1",
										"custom",
										"profile"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Characteristics API",
			"item": [
				{
					"name": "Retrieve Customer Characteristics",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Client-Id",
								"value": "{{api_credentials_id}}",
								"type": "text"
							},
							{
								"key": "X-Customer-Id",
								"value": "{{customer_id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{proxy_url}}characteristics/v1/customer",
							"host": [
								"{{proxy_url}}characteristics"
							],
							"path": [
								"v1",
								"customer"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Customer Characteristics (Credit Card)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Client-Id",
								"value": "{{api_credentials_id}}",
								"type": "text"
							},
							{
								"key": "X-Customer-Id",
								"value": "{{customer_id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{proxy_url}}characteristics/v1/customer/credit-card",
							"host": [
								"{{proxy_url}}characteristics"
							],
							"path": [
								"v1",
								"customer",
								"credit-card"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Customer Characteristics (Loan)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Client-Id",
								"value": "{{api_credentials_id}}",
								"type": "text"
							},
							{
								"key": "X-Customer-Id",
								"value": "{{customer_id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{proxy_url}}characteristics/v1/customer/loan",
							"host": [
								"{{proxy_url}}characteristics"
							],
							"path": [
								"v1",
								"customer",
								"loan"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Customer Characteristics (Overdraft)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Client-Id",
								"value": "{{api_credentials_id}}",
								"type": "text"
							},
							{
								"key": "X-Customer-Id",
								"value": "{{customer_id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{proxy_url}}characteristics/v1/customer/overdraft",
							"host": [
								"{{proxy_url}}characteristics"
							],
							"path": [
								"v1",
								"customer",
								"overdraft"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Customer Characteristics (Saver)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Client-Id",
								"value": "{{api_credentials_id}}",
								"type": "text"
							},
							{
								"key": "X-Customer-Id",
								"value": "{{customer_id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{proxy_url}}characteristics/v1/customer/saver",
							"host": [
								"{{proxy_url}}characteristics"
							],
							"path": [
								"v1",
								"customer",
								"saver"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{auth_token}}",
						"type": "string"
					}
				]
			}
		},
		{
			"name": "Assess API",
			"item": [
				{
					"name": "Customer Applications",
					"item": [
						{
							"name": "Create Customer Application",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"customer_application_id\", jsonData.data.application_id);",
											"pm.environment.set(\"customer_id\", jsonData.data.customer_id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"primary_applicant\": {\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\"\n  },\n  \"secondary_applicants\": [\n    {\n      \"first_name\": \"Jane\",\n      \"last_name\": \"Doe\"\n    }\n  ],\n  \"metadata\": {\n    \"loan_product_code\": \"credit_card_1234\"\n  }\n}\n"
								},
								"url": {
									"raw": "{{proxy_url}}assess/v1/customer-applications",
									"host": [
										"{{proxy_url}}assess"
									],
									"path": [
										"v1",
										"customer-applications"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Customer Applications",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}assess/v1/customer-applications",
									"host": [
										"{{proxy_url}}assess"
									],
									"path": [
										"v1",
										"customer-applications"
									],
									"query": [
										{
											"key": "metadata.loan_product_code",
											"value": "credit_card_1234",
											"description": "Search by exact-match on the field_name of metadata properties.",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Customer Application",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}assess/v1/customer-applications/{{customer_application_id}}",
									"host": [
										"{{proxy_url}}assess"
									],
									"path": [
										"v1",
										"customer-applications",
										"{{customer_application_id}}"
									],
									"query": [
										{
											"key": "timezone",
											"value": "Europe/London",
											"description": "Timezone identifier (e.g. `Europe/London`) to make dates relativised to the target location.",
											"disabled": true
										},
										{
											"key": "date_range_durations",
											"value": "P1M,P3M,P6M,P12M",
											"description": "Used with `timezone` and `date_range_end` to determine the list of `date_ranges` that appear in the metadata of the response.",
											"disabled": true
										},
										{
											"key": "date_range_end",
											"value": "latest_date",
											"description": "Determines whether the date range corresponds to a full calendar month or months to the date of the most recent account connection.",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Customer Application",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}assess/v1/customer-applications/{{customer_application_id}}",
									"host": [
										"{{proxy_url}}assess"
									],
									"path": [
										"v1",
										"customer-applications",
										"{{customer_application_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Customer Application Links",
					"item": [
						{
							"name": "Retrieve Customer Application URL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"redirect_url\": \"https://my-agent-webapp.com/connected?my-parameter=xyz\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proxy_url}}assess/v1/customer-applications/{{customer_application_id}}/customer-links",
									"host": [
										"{{proxy_url}}assess"
									],
									"path": [
										"v1",
										"customer-applications",
										"{{customer_application_id}}",
										"customer-links"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Aggregation Buckets",
					"item": [
						{
							"name": "Create Buckets",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"aggregations_bucket_id\", jsonData.data.bucket_id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"example-bucket\",\n  \"categorisation_model\": \"uk-v2\",\n  \"buckets\": [\n    {\n      \"bucket_l1\": \"housing_fuel_and_power\",\n      \"criteria\": [\n        {\n          \"bucket_l2\": \"mortgage_repayment\",\n          \"category_l1\": \"mortgage_and_rent\",\n          \"category_l2\": \"mortgage\"\n        },\n        {\n          \"bucket_l2\": \"rent_payment\",\n          \"category_l1\": \"mortgage_and_rent\",\n          \"category_l2\": \"rent\"\n        },\n        {\n          \"bucket_l2\": \"electricity_and_gas\",\n          \"category_l1\": \"utilities\",\n          \"category_l2\": \"utilities_energy\"\n        },\n        {\n          \"bucket_l2\": \"other_fuels\",\n          \"category_l1\": \"utilities\",\n          \"category_l2\": \"other_utilities\"\n        }\n      ]\n    },\n    {\n      \"bucket_l1\": \"recreation_and_culture\",\n      \"criteria\": [\n        {\n          \"bucket_l2\": \"holiday\",\n          \"category_l1\": \"travel\",\n          \"category_l2\": \"holiday_and_travel_expenses\"\n        },\n        {\n          \"bucket_l2\": \"pet_care\",\n          \"category_l1\": \"home\",\n          \"category_l2\": \"pets\"\n        },\n        {\n          \"bucket_l2\": \"leisure_and_culture\",\n          \"category_l1\": \"entertainment\",\n          \"category_l2\": \"leisure_and_amusement_activities\"\n        },\n        {\n          \"bucket_l2\": \"reading\",\n          \"category_l1\": \"entertainment\",\n          \"category_l2\": \"books_and_reading\"\n        }\n      ]\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proxy_url}}aggregations/v2/buckets",
									"host": [
										"{{proxy_url}}aggregations"
									],
									"path": [
										"v2",
										"buckets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve All Buckets",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}aggregations/v2/buckets",
									"host": [
										"{{proxy_url}}aggregations"
									],
									"path": [
										"v2",
										"buckets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Bucket",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}aggregations/v2/buckets/{{aggregations_bucket_id}}",
									"host": [
										"{{proxy_url}}aggregations"
									],
									"path": [
										"v2",
										"buckets",
										"{{aggregations_bucket_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Bucket Totals",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}aggregations/v2/buckets/{{aggregations_bucket_id}}/totals",
									"host": [
										"{{proxy_url}}aggregations"
									],
									"path": [
										"v2",
										"buckets",
										"{{aggregations_bucket_id}}",
										"totals"
									],
									"query": [
										{
											"key": "date_from",
											"value": "",
											"disabled": true
										},
										{
											"key": "date_to",
											"value": "",
											"disabled": true
										},
										{
											"key": "currency",
											"value": "GBP",
											"disabled": true
										},
										{
											"key": "timezone",
											"value": "UTC",
											"disabled": true
										},
										{
											"key": "group_by",
											"value": "bucket_l1",
											"description": "Defines hierarchy of groupings for the resulting totals.",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Bucket",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"example-bucket-updated\",\n  \"categorisation_model\": \"uk-v2\",\n  \"buckets\": [\n    {\n      \"bucket_l1\": \"housing_fuel_and_power\",\n      \"additional_data\": {\n        \"display_name\": \"Housing, fuel & power\"\n      },\n      \"criteria\": [\n        {\n          \"bucket_l2\": \"mortgage_repayment\",\n          \"category_l1\": \"mortgage_and_rent\",\n          \"category_l2\": \"mortgage\",\n          \"additional_data\": {\n            \"display_name\": \"Mortgage repayment\"\n          }\n        },\n        {\n          \"bucket_l2\": \"rent_payment\",\n          \"category_l1\": \"mortgage_and_rent\",\n          \"additional_data\": {\n            \"display_name\": \"Rent repayment\"\n          },\n          \"category_l2\": \"rent\"\n        },\n        {\n          \"bucket_l2\": \"electricity_and_gas\",\n          \"category_l1\": \"utilities\",\n          \"category_l2\": \"utilities_energy\",\n          \"additional_data\": {\n            \"display_name\": \"Electricity & gas\"\n          }\n        },\n        {\n          \"bucket_l2\": \"other_fuels\",\n          \"category_l1\": \"utilities\",\n          \"category_l2\": \"other_utilities\",\n          \"additional_data\": {\n            \"display_name\": \"Other fuels\"\n          }\n        }\n      ]\n    },\n    {\n      \"bucket_l1\": \"recreation_and_culture\",\n      \"additional_data\": {\n        \"display_name\": \"Recreation & Culture\"\n      },\n      \"criteria\": [\n        {\n          \"bucket_l2\": \"holiday\",\n          \"category_l1\": \"travel\",\n          \"category_l2\": \"holiday_and_travel_expenses\",\n          \"additional_data\": {\n            \"display_name\": \"Holiday\"\n          }\n        },\n        {\n          \"bucket_l2\": \"pet_care\",\n          \"category_l1\": \"home\",\n          \"category_l2\": \"pets\",\n          \"additional_data\": {\n            \"display_name\": \"Pet care\"\n          }\n        },\n        {\n          \"bucket_l2\": \"leisure_and_culture\",\n          \"category_l1\": \"entertainment\",\n          \"category_l2\": \"leisure_and_amusement_activities\",\n          \"additional_data\": {\n            \"display_name\": \"Leisure & culture\"\n          }\n        },\n        {\n          \"bucket_l2\": \"reading\",\n          \"category_l1\": \"entertainment\",\n          \"category_l2\": \"books_and_reading\",\n          \"additional_data\": {\n            \"display_name\": \"Reading\"\n          }\n        }\n      ]\n    }\n  ]\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{proxy_url}}aggregations/v2/buckets/{{aggregations_bucket_id}}",
									"host": [
										"{{proxy_url}}aggregations"
									],
									"path": [
										"v2",
										"buckets",
										"{{aggregations_bucket_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Bucket",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}aggregations/v2/buckets/{{aggregations_bucket_id}}",
									"host": [
										"{{proxy_url}}aggregations"
									],
									"path": [
										"v2",
										"buckets",
										"{{aggregations_bucket_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Retrieve Affordability Report",
					"item": [
						{
							"name": "Retrieve Affordability Report",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}v1/affordability/report",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"affordability",
										"report"
									],
									"query": [
										{
											"key": "month_from",
											"value": "2022-12",
											"disabled": true
										},
										{
											"key": "month_to",
											"value": "2023-04",
											"disabled": true
										},
										{
											"key": "currency",
											"value": "GBP",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Affordability Transactions",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{proxy_url}}v1/affordability/transactions?criteria=essential_expenditure&date_from=2023-01-01T00:00:00Z&date_to=2023-04-30T23:59:59Z",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"affordability",
										"transactions"
									],
									"query": [
										{
											"key": "criteria",
											"value": "essential_expenditure"
										},
										{
											"key": "date_from",
											"value": "2023-01-01T00:00:00Z"
										},
										{
											"key": "date_to",
											"value": "2023-04-30T23:59:59Z"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Payments API",
			"item": [
				{
					"name": "Initiate Payment - TPP",
					"item": [
						{
							"name": "List Providers",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{proxy_url}}v1/payments/providers?country=GBR,DEU",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"payments",
										"providers"
									],
									"query": [
										{
											"key": "type",
											"value": "sandbox",
											"disabled": true
										},
										{
											"key": "country",
											"value": "GBR,DEU"
										},
										{
											"key": "product",
											"value": "domestic-single-payment,domestic-standing-order",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Bud Pay URL - Single Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Response has payment id\"] = jsonData.data.payment_id;",
											"pm.environment.set(\"single_payment_id\", jsonData.data.payment_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"redirect_url\": \"https://thisisbud.com\",\n  \"provider\": \"BankOfBudOBUK\",\n  \"payment_details\": {\n    \"reference\": \"single payment\",\n    \"recipient\": {\n      \"name\": \"{{$randomFirstName}}\",\n      \"account_number\": \"{{sort_code_account_number}}\",\n      \"type\": \"SortCodeAccountNumber\"\n    },\n    \"sender\": {\n      \"user_id\": \"{{$randomUUID}}\",\n      \"name\": \"Chris\"\n    },\n    \"amount\": {\n      \"value\": \"10.0\",\n      \"currency\": \"GBP\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{proxy_url}}v1/payments/single/bud-pay-url",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"payments",
										"single",
										"bud-pay-url"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Bud Pay URL - Standing Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"",
											"tests[\"Response has payment id\"] = jsonData.data.payment_id;",
											"pm.environment.set(\"standing_payment_id\", jsonData.data.payment_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"redirect_url\": \"https://thisisbud.com\",\n    \"standing_order_details\": {\n        \"reference\": \"reference monthly\",\n        \"recipient\": {\n            \"name\": \"{{$randomFirstName}}\",\n            \"type\": \"SortCodeAccountNumber\",\n            \"account_number\": \"{{sort_code_account_number}}\"\n        },\n        \"recurring_amount\": {\n            \"value\": \"15.0\",\n            \"currency\": \"GBP\"\n        },\n        \"sender\": {\n            \"name\": \"Chris\",\n            \"user_id\": \"{{$randomUUID}}\"\n        },\n        \"frequency\": \"monthly\",\n        \"first_payment_date\": \"2023-02-08\"\n    }\n}"
								},
								"url": {
									"raw": "{{proxy_url}}v1/payments/standing-order/bud-pay-url",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"payments",
										"standing-order",
										"bud-pay-url"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Bud Pay URL - Scheduled Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"",
											"tests[\"Response has payment id\"] = jsonData.data.payment_id;",
											"pm.environment.set(\"scheduled_payment_id\", jsonData.data.payment_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"redirect_url\": \"https://thisisbud.com\",\n    \"scheduled_payment_details\": {\n        \"reference\": \"Test\",\n        \"recipient\": {\n            \"name\": \"{{$randomFirstName}}\",\n            \"type\": \"SortCodeAccountNumber\",\n            \"account_number\": \"{{sort_code_account_number}}\"\n        },\n        \"amount\": {\n            \"value\": \"19.0\",\n            \"currency\": \"GBP\"\n        },\n        \"sender\": {\n            \"name\": \"Chris\",\n            \"user_id\": \"{{$randomUUID}}\"\n        },\n        \"requested_execution_date\": \"2023-10-01\"\n    }\n}"
								},
								"url": {
									"raw": "{{proxy_url}}v1/payments/scheduled/bud-pay-url",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"payments",
										"scheduled",
										"bud-pay-url"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Initiate Payment - TSP",
					"item": [
						{
							"name": "Create Single Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"",
											"tests[\"Response has payment id\"] = jsonData.data.payment_id;",
											"pm.environment.set(\"single_payment_id\", jsonData.data.payment_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"redirect_url\": \"https://thisisbud.com\",\n  \"provider\": \"BankOfBudOBUK\",\n  \"payment_details\": {\n    \"reference\": \"single payment\",\n    \"recipient\": {\n      \"name\": \"{{$randomFirstName}}\",\n      \"account_number\": \"{{sort_code_account_number}}\",\n      \"type\": \"SortCodeAccountNumber\"\n    },\n    \"sender\": {\n      \"user_id\": \"{{$randomUUID}}\",\n      \"name\": \"Chris\"\n    },\n    \"amount\": {\n      \"value\": \"10.0\",\n      \"currency\": \"GBP\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{proxy_url}}v1/payments/single",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"payments",
										"single"
									]
								}
							},
							"response": []
						},
						{
							"name": "Confirm Single Payment",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}"
									}
								],
								"url": {
									"raw": "{{proxy_url}}v1/payments/single/{{single_payment_id}}/confirm",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"payments",
										"single",
										"{{single_payment_id}}",
										"confirm"
									]
								}
							},
							"response": []
						},
						{
							"name": "Submit auth codes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Response has connection_task_id\"] = jsonData.data.task_id;",
											"",
											"pm.environment.set(\"connection_task_id\", jsonData.data.task_id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "default"
									},
									{
										"key": "X-Customer-Id",
										"value": "{{customer_id}}",
										"type": "default"
									},
									{
										"key": "X-Customer-Secret",
										"value": "{{customer_secret}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"state\": \"{{connection_task_id}}\",\n  \"my-parameter\":\"xyz\",\n  \"code\": \"....\"\n}"
								},
								"url": {
									"raw": "{{proxy_url}}v1/open-banking/authorisation-codes",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"open-banking",
										"authorisation-codes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Standing Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"",
											"tests[\"Response has payment id\"] = jsonData.data.payment_id;",
											"pm.environment.set(\"standing_payment_id\", jsonData.data.payment_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"redirect_url\": \"https://thisisbud.com\",\n    \"provider\": \"BankOfBudOBUK\",\n    \"standing_order_details\": {\n        \"reference\": \"reference monthly\",\n        \"recipient\": {\n            \"name\": \"{{$randomFirstName}}\",\n            \"type\": \"SortCodeAccountNumber\",\n            \"account_number\": \"{{sort_code_account_number}}\"\n        },\n        \"recurring_amount\": {\n            \"value\": \"15.0\",\n            \"currency\": \"GBP\"\n        },\n        \"sender\": {\n            \"name\": \"Chris\",\n            \"user_id\": \"{{$randomUUID}}\"\n        },\n        \"frequency\": \"monthly\",\n        \"first_payment_date\": \"2023-02-08\"\n    }\n}"
								},
								"url": {
									"raw": "{{proxy_url}}v1/payments/standing-order",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"payments",
										"standing-order"
									]
								}
							},
							"response": []
						},
						{
							"name": "Confirm Standing Order",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}"
									}
								],
								"url": {
									"raw": "{{proxy_url}}v1/payments/standing-order/{{standing_payment_id}}/confirm",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"payments",
										"standing-order",
										"{{standing_payment_id}}",
										"confirm"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Scheduled Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"",
											"tests[\"Response has payment id\"] = jsonData.data.payment_id;",
											"pm.environment.set(\"scheduled_payment_id\", jsonData.data.payment_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"redirect_url\": \"https://thisisbud.com\",\n    \"provider\": \"BankOfBudOBUK\",\n    \"scheduled_payment_details\": {\n        \"reference\": \"Test\",\n        \"recipient\": {\n            \"name\": \"{{$randomFirstName}}\",\n            \"type\": \"SortCodeAccountNumber\",\n            \"account_number\": \"{{sort_code_account_number}}\"\n        },\n        \"amount\": {\n            \"value\": \"19.0\",\n            \"currency\": \"GBP\"\n        },\n        \"sender\": {\n            \"name\": \"Chris\",\n            \"user_id\": \"{{$randomUUID}}\"\n        },\n        \"requested_execution_date\": \"2023-10-01\"\n    }\n}"
								},
								"url": {
									"raw": "{{proxy_url}}v1/payments/scheduled",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"payments",
										"scheduled"
									]
								}
							},
							"response": []
						},
						{
							"name": "Confirm Scheduled Payment",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}"
									}
								],
								"url": {
									"raw": "{{proxy_url}}v1/payments/scheduled/{{scheduled_payment_id}}/confirm",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"payments",
										"scheduled",
										"{{scheduled_payment_id}}",
										"confirm"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Manage Payments",
					"item": [
						{
							"name": "List Single Payments",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}"
									},
									{
										"key": "X-Amount-From",
										"value": "10.00",
										"disabled": true
									},
									{
										"key": "X-Amount-To",
										"value": "10000.00",
										"disabled": true
									},
									{
										"key": "X-Date-From",
										"value": "2020-06-01T15:00:00Z",
										"disabled": true
									},
									{
										"key": "X-Date-To",
										"value": "2020-06-01T15:00:00Z",
										"disabled": true
									},
									{
										"key": "X-Page-Number",
										"value": "1",
										"disabled": true
									},
									{
										"key": "X-Payment-Id",
										"value": "{{single_payment_id}}",
										"disabled": true
									},
									{
										"key": "X-Sender-Providers",
										"value": "Lloyds,Nationwide",
										"disabled": true
									},
									{
										"key": "X-Status-Codes",
										"value": "CREATED,SETTLED",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proxy_url}}v1/payments/single",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"payments",
										"single"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Single Payment Status",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}"
									}
								],
								"url": {
									"raw": "{{proxy_url}}v1/payments/single/{{single_payment_id}}",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"payments",
										"single",
										"{{single_payment_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Standing Orders",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}"
									},
									{
										"key": "X-Amount-From",
										"value": "10.00",
										"disabled": true
									},
									{
										"key": "X-Amount-To",
										"value": "10000.00",
										"disabled": true
									},
									{
										"key": "X-Date-From",
										"value": "2020-06-01T15:00:00Z",
										"disabled": true
									},
									{
										"key": "X-Date-To",
										"value": "2020-06-01T15:00:00Z",
										"disabled": true
									},
									{
										"key": "X-Page-Number",
										"value": "1",
										"disabled": true
									},
									{
										"key": "X-Payment-Id",
										"value": "{{standing_payment_id}}"
									},
									{
										"key": "X-Sender-Providers",
										"value": "Lloyds,Nationwide",
										"disabled": true
									},
									{
										"key": "X-Status-Codes",
										"value": "CREATED,SETTLED",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proxy_url}}v1/payments/standing-order",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"payments",
										"standing-order"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Standing Order Payment Status",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}"
									}
								],
								"url": {
									"raw": "{{proxy_url}}v1/payments/standing-order/{{standing_payment_id}}",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"payments",
										"standing-order",
										"{{standing_payment_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Scheduled Payments",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}"
									},
									{
										"key": "X-Amount-From",
										"value": "10.00",
										"disabled": true
									},
									{
										"key": "X-Amount-To",
										"value": "10000.00",
										"disabled": true
									},
									{
										"key": "X-Date-From",
										"value": "2020-06-01T15:00:00Z",
										"disabled": true
									},
									{
										"key": "X-Date-To",
										"value": "2020-06-01T15:00:00Z",
										"disabled": true
									},
									{
										"key": "X-Page-Number",
										"value": "1",
										"disabled": true
									},
									{
										"key": "X-Payment-Id",
										"value": "{{scheduled_payment_id}}"
									},
									{
										"key": "X-Sender-Providers",
										"value": "Lloyds,Nationwide",
										"disabled": true
									},
									{
										"key": "X-Status-Codes",
										"value": "CREATED,SETTLED",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{proxy_url}}v1/payments/scheduled",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"payments",
										"scheduled"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Scheduled Payment Status",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Client-Id",
										"value": "{{api_credentials_id}}"
									}
								],
								"url": {
									"raw": "{{proxy_url}}v1/payments/scheduled/{{scheduled_payment_id}}",
									"host": [
										"{{proxy_url}}v1"
									],
									"path": [
										"payments",
										"scheduled",
										"{{scheduled_payment_id}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}